/*
Deployment script for LibraryDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "LibraryDB"
:setvar DefaultFilePrefix "LibraryDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[Book]...';


GO
CREATE TABLE [dbo].[Book] (
    [BookId]      UNIQUEIDENTIFIER NOT NULL,
    [Ttitle]      NVARCHAR (100)   NOT NULL,
    [Author]      NVARCHAR (100)   NOT NULL,
    [Publisher]   NVARCHAR (100)   NOT NULL,
    [ReleaseYear] DATETIME2 (7)    NOT NULL,
    CONSTRAINT [Pk_Book_BookId] PRIMARY KEY CLUSTERED ([BookId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Member]...';


GO
CREATE TABLE [dbo].[Member] (
    [MemberId]  UNIQUEIDENTIFIER NOT NULL,
    [FirstName] NVARCHAR (100)   NOT NULL,
    [LastName]  NVARCHAR (100)   NOT NULL,
    CONSTRAINT [Pk_Member_MemberId] PRIMARY KEY CLUSTERED ([MemberId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Rental]...';


GO
CREATE TABLE [dbo].[Rental] (
    [RentalId] UNIQUEIDENTIFIER NOT NULL,
    [BookId]   UNIQUEIDENTIFIER NOT NULL,
    [MemberId] UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [Pk_Rental_RentalIdBookIdMemberId] PRIMARY KEY CLUSTERED ([RentalId] ASC, [BookId] ASC, [MemberId] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Book_Rental_BookId]...';


GO
ALTER TABLE [dbo].[Rental] WITH NOCHECK
    ADD CONSTRAINT [Fk_Book_Rental_BookId] FOREIGN KEY ([BookId]) REFERENCES [dbo].[Book] ([BookId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Member_Rental_MemberId]...';


GO
ALTER TABLE [dbo].[Rental] WITH NOCHECK
    ADD CONSTRAINT [Fk_Member_Rental_MemberId] FOREIGN KEY ([MemberId]) REFERENCES [dbo].[Member] ([MemberId]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Rental] WITH CHECK CHECK CONSTRAINT [Fk_Book_Rental_BookId];

ALTER TABLE [dbo].[Rental] WITH CHECK CHECK CONSTRAINT [Fk_Member_Rental_MemberId];


GO
PRINT N'Update complete.';


GO
