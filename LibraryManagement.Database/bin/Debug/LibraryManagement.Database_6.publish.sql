/*
Deployment script for LibraryDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "LibraryDB"
:setvar DefaultFilePrefix "LibraryDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key e48a31de-b844-4071-bfed-26e0e5f5c6a4 is skipped, element [dbo].[Book].[Ttitle] (SqlSimpleColumn) will not be renamed to Title';


GO
PRINT N'Creating Table [dbo].[ScriptExecutionHistory]...';


GO
CREATE TABLE [dbo].[ScriptExecutionHistory] (
    [ScriptId]      UNIQUEIDENTIFIER NOT NULL,
    [ExecutionTime] DATETIME2 (7)    NOT NULL,
    CONSTRAINT [Pk_ScriptExecutionHistory_ScriptId] PRIMARY KEY CLUSTERED ([ScriptId] ASC)
);


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e48a31de-b844-4071-bfed-26e0e5f5c6a4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e48a31de-b844-4071-bfed-26e0e5f5c6a4')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


DECLARE @ScriptID uniqueidentifier 
SET @ScriptID = '9F85FAFD-C847-4B18-B151-67C171F3AE67'

IF NOT EXISTS(SELECT * FROM [dbo].ScriptExecutionHistory WHERE ScriptExecutionHistory.ScriptId = @ScriptID)

BEGIN

INSERT INTO [dbo].Book (BookId,Author,Publisher,ReleaseYear,Title)
VALUES (newid(),'Mato Lovrak','Svjetlost',GETUTCDATE(),'Vlak u snijegu')

INSERT INTO [dbo].ScriptExecutionHistory (ScriptId,ExecutionTime)
VALUES(@ScriptID, GETUTCDATE())

END

-- Hint: napisat logiku da provjeri da li ima vec postojeci rekord
-- ako ima nemoj radit insert ako nema uradi
-- ScriptExecutionHistory tabela koja vodi racuna o scriptid i exeuction time

GO

GO
PRINT N'Update complete.';


GO
